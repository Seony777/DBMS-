1. 제약(Constraints)
    제약은 특정 컬럼 혹은 테이블 전체에 삽입 가능한 값을 제한하는 규칙

    1) NOT NULL
    컬럼에 반드시 값이 있어야 한다. (NULL 불가)

    2) UNIQUE
    같은 테이블 내에서 중복된 값이 있을 수 없다.

    3) PRIMARY KEY(기본 키, 공개 키)
    NOT NULL + UNIQUE를 결합한 것
    테이블 내에서 유일(UNIQUE)하고 필수(NOT NULL)로 값이 있어야 한다.
    일반적으로 한 테이블 당 한 컬럼만 PRIMARY KEY를 지정한다.

    4) FOREIGN KEY(외래 키)
    다른 테이블의 특정 값(주로 PRIMARY KEY)와 연관되도록 보장
    ex) b테이블에서 PRIMARY KEY를 a테이블에서는 FOREIGN KEY이다.

2. PRIMARY KEY와 AUTO_INCREMENT로 고유 ID 만들기
    1) ID 컬럼 설계
    대부분의 테이블은 고유 식별자(Unique Identifier)가 필요하다.
    MYSQL에서는 AUTO_INCREMENT를 사용해, 자동 증가되는 정수형 ID를 쉽게 구현할 수 있다.
    PRIMARY KEY를 붙여서, NOT NULL과 UNIQUE가 동시에 보장되도록 한다.
    -- book 테이블: PRIMARY KEY, CHECK 설정정
    CREATE TABLE IF NOT EXISTS books (
        book_id INT AUTO_INCREMENT PRIMARY KEY,
        title VARCHAR(200) NOT NULL, -- 책 제목은 항상 필요요 
        author VARCHAR(100),
        price DECIMAL(6,2) CHECK (price > 0),-- 0보다 크고 9999.99까지 가능능
        is_published BOOLEAN
    );
    book_id가 테이블의 식별자로서 각 행마다 자동으로 증가하고 중복되지 않는다.
    CHECK (price > 0)를 통해 가격이 0밑으로 떨어지는 걸 방지

3. NOT NULL & CHECK & UNIQUE
    1) NOT NULL
    특정 컬럼에 반드시 값이 존재해야 하는 경우
    ALTER TABLE books
    MODIFY COLUMN title VARCHAR(200) NOT NULL;

    2) CHECK
    컬럼 값이 특정 조건을 만족해야 한다.
    ALTER TABLE books
    MODIFY COLUMN price DECIMAL(6,2) CHECK (price > 0);

    3) UNIQUE
    중복을 허용하지 않는다.
    ALTER TABLE customers
    MODIFY COLUMN email VARCHAR(200) UNIQUE;

    4) PRIMARY KEY vs UNIQUE
    PRIMARY KEY는 NOT NULL + UNIQUE
    한 테이블에 1개만 지정할 수 있다.
    DB(DATABASE) 내부적으로 인덱스 최적화를 해준다.

4. 데이터 삽입 시 자동 증가 ID 활용
    -- INSERT INTO books(title, author, price, is_published)
    -- VALUES
    -- ('역사의 쓸모','최태성',15.50,TRUE);
    book_id는 자동으로 1부터 증가하는 ID가 DB에 부여된다.

    SELECT * FROM books;