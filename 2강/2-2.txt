1. 데이터베이스 시스템 구조 및 핵심개념
    1) 데이터베이스 서버와 데이터베이스
        *) 데이터베이스 서버에는 여러 개의 데이터베이스를 둘 수 있음
        *) 데이터베이스 안에는 실제 데이터를 저장하는 테이블이 존재한다.

2. 데이터 정의 (Data Definition Language)
    1) 기본 개념
        *) CREATE DATABASE, CREATE TABLE: 새로운 데이터베이스나 테이블 생성
        *) ALTER DATABASE, ALTER TABLE: 기존 데이터베이스나 테이블 구조 수정
        *) CREATE DATABASE students;

        *) IF NOT EXISTS 옵션을 사용하면, 이미 같은 이름의 데이터베이스가 있을 때, 에러를 피할 수 있다.
        *) 데이터베이스를 삭제할 때는 
            DROP DATABASE students;

3. 테이블 생성 전 필요한 기획 (데이터베이스 디자인)
    - 어떤 컬럼(열)을 만들지, 각 컬럼에 어떤 데이터 타입을 적용할지 미리 생각해야 한다.
    
    - ex) 우리가 users라는 테이블을 만든다고 가정해봅시다.
        -> 이름(문자열), 주소(문자열), 연령(숫자), 키(숫자), 가입일(날짜/시간), 결혼 여부(Yes/No)
    
4. MySQL에서 자주 쓰이는 데이터 타입
    4-1) 문자열(문자) 타입
        *) CHAR(n) -> 고정 길이의 문자열. n개 미만의 문자를 넣으면 나머지는 공백으로 채워짐
        *) VARCHAR(n) -> 가변 길이의 문자열. 최대 n개의 문자까지 저장 가능. 실제로 사용된 길이만큼만 저장된다.
        *) TEXT 계열 -> 긴 문자열(게시글, 설명)을 저장할 때 사용. TEXT, MEDIUMTXT, LONGTEXT 등이 있습니다.
        *) ENUM -> 미리 지정한 문자열 값만 허용하는 타입. 
            ENUM('employed','unemployed','self-employed')하면 이 세개 값 중에서만 허용된다.

    4-2) 숫자 타입
        *) 정수(Integer) - int 
        INT, TINYINT, SMALLINT, MEDIUMINT, BIGINT...등이 있습니다.
        표현 가능한 값의 범위가 다르다.
        *) 고정 소수점(정밀도 있는 실수)
        DECIMAL, NUMERIC
        소수점 이하를 정확하게 다루어야 할 때 (환전, 환율)
        *) 부동 소수점(근사치 실수)
        FLOAT, DOUBLE
        값의 범위를 넓게 하지만, 약간의 오차가 발생 가능하다. 

    4-3) 날짜/시간 타입
        *) DATE 
        연-월-일 형태의 날짜만 저장한다.(시,분,초 정보는 없다.)
        *) DATETIME, TIMESTAMP
        날짜 + 시간(시,분,초)까지 함께 저장한다.
        *) TIME 
        시,분,초만 저장할 때 사용

    4-4) 기타 타입
        *) BOOLEAN
        TRUE or FALSE 값을 저장한다. (내부적으로는 TINYINT(1)로 처리되는 경우가 많다.)
        *) JSON - 파일 형식(확장자)
        JSON 형식의 문자열을 저장, 처리할 수 있는 전용 타입 제공.

5. 저장 방식
    *) 일반적으로 데이터베이스에 파일 자체를 저장하지 않는다.
    *) 이미지 파일, 영상 파일... 등등은 별도의 파일 서비스나 스토리지에 저장한다. 데이터베이스에는 해당 파일 경로(URL)만 텍스트 형태로 저장하는 방식을 사용한다. (서버에서 데이터베이스에 이미지 또는 영상 자료를 요청, 데이터베이스에서 해당 자료의 주소를 제공, 서버는 주소를 가지고 해당 자료에 접근할 수 있게 된다.)
    *) 데이터베이스는 숫자, 문자열, 날짜 등 원시(PRIMITIVE) 데이터 관리에 최적화 되어 있다. 따라서 큰 파일들은 저장하기에 부적합하다.