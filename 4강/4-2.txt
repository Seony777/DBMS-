서브쿼리(SubQuery) & 뷰(View)
1. 왜 사용할까?
    복잡한 데이터를 쉽게 다루기 위해서 사용한다.

2. 쉽게 말하자면
    1) 서브쿼리는 즉석에서 계산하는 값
    2) 뷰는 미리 저장해둔 가상의 테이블

3. 서브쿼리 
    다른 SQL 문장 안에 포함된 작은 SQL문.
    수학에서 괄호 안의 계산을 먼저 하는 것처럼,
    서브쿼리도 먼저 실행 된 후, 그 결과가 메인 쿼리에서 사용된다.

    예시) "가장 높은 급여를 받는 직원의 이름을 얻자!"
    SELECT name
    FROM employees
    WHERE salary = (SELECT MAX(salary) FROM employees);

    1) SELECT MAX(salary) FROM employees -> 가장 높은 급여를 찾음
    2) WHERE salary = 급여값 -> 해당 급여를 받는 직원의 이름을 찾음

    특징)
    1) 즉석에서 실행: 최신 데이터를 가져올 수 있다.
    2) 메인 쿼리의 일부로 동작: 하나 혹은 여러 개의 값 반환 가능

4. 뷰 
    미리 만들어 놓은 가상의 테이블이다. 실제 데이터를 저장하는 건 아니지만,
    마치 테이블처럼 사용할 수 있다.
    계산 과정(쿼리)을 미리 저장해두고, 필요할 때 불러오는 것과 같다. 

    예시) "직원들의 평균 급여를 미리 저장해 두었다가 쉽게 불러오기"
    CREATE VIEW employees_avg_salary AS
    SELECT department, AVG(salary) AS employees_avg_salary
    FROM employees
    GROUP BY department;

    SELECT * FROM employees_avg_salary;

    특징) 
    1) 실제 데이터를 저장하지 않음. -> 테이블처럼 보이지만, 쿼리 결과를 저장하는 것이 아니라, 실행할 때 데이터를 가져온다.
    2) 코드를 단순화 할 수 있다.